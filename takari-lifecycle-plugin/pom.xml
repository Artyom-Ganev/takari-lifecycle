<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2014 Takari, Inc.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.takari.maven.plugins</groupId>
    <artifactId>takari-lifecycle</artifactId>
    <version>1.9.0-SNAPSHOT</version>
  </parent>
  <artifactId>takari-lifecycle-plugin</artifactId>
  <packaging>maven-plugin</packaging>

  <!-- not inherited, IIRC -->
  <prerequisites>
    <maven>[3.2.1,)</maven>
  </prerequisites>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>${mavenPluginPluginVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <version>${aetherVersion}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <version>${aetherVersion}</version>
      <scope>compile</scope>
    </dependency>
    <!-- Build Avoidance -->
    <dependency>
      <groupId>io.takari</groupId>
      <artifactId>incrementalbuild</artifactId>
      <version>${incrementalbuild.version}</version>
    </dependency>
    <!-- JDT compiler and matching APT support -->
    <dependency>
      <groupId>org.eclipse.tycho</groupId>
      <artifactId>org.eclipse.jdt.core</artifactId>
      <version>3.10.0.v20140604-1726</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.tycho</groupId>
      <artifactId>org.eclipse.jdt.compiler.apt</artifactId>
      <version>1.1.0.v20140509-1235</version>
    </dependency>
    <!-- Resources -->
    <dependency>
      <groupId>io.takari.maven.plugins</groupId>
      <artifactId>takari-resource-filtering</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- We can use 15.0 at runtime because of the classloader isolation 
      in Maven, but we cannot use 15.0 during testing because sisu will not work 
      with Guava 15.0 because they are incompatible. The eventual solution is to 
      have the realms for testing created in the same way that the core is. -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version> <!-- Would like 15.0 -->
    </dependency>
    <!-- JAR -->
    <dependency>
      <groupId>io.takari</groupId>
      <artifactId>takari-archiver</artifactId>
      <version>0.1.5</version>
    </dependency>
    <!-- Dependency -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.2.4</version>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.4</version>
    </dependency>
    <!-- process forking -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <version>${mavenVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-testing</groupId>
      <artifactId>maven-plugin-testing-harness</artifactId>
      <version>${plugintesting.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.takari</groupId>
      <artifactId>takari-hash</artifactId>
      <version>0.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>5.0.2</version>
      <scope>test</scope>
    </dependency>
    <!-- testing deploy -->
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-connector-wagon</artifactId>
      <version>0.9.0.M2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-file</artifactId>
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>sisu-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <excludes combine.children="append">
            <!-- see similar configuration in parent pom.xml -->
            <exclude>src/main/java/io/takari/maven/plugins/compile/jdt/ReferenceCollection.java</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
