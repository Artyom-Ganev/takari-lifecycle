<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.takari.lifecycle.its</groupId>
  <artifactId>pom-packaging</artifactId>
  <version>1.0</version>
  <packaging>pom</packaging>

  <description>
  The point of this test is to ensure Takari install and deploy mojos are used 
  for project with packaging=pom. This is a special packaging type used by aggregator
  and parent projects and cannot be easily replaced by custom packaging type.

  Instead of custom packagign type, takari-lifecycle-plugin redefines lifecycle mapping
  for existing packaging type.

  The test project has standard install/deploy mojos disabled, so it won't be installed
  and deployed unless redefined lifecycle mapping works.
  </description>

  <distributionManagement>
    <repository>
      <id>repoid</id>
      <url>file://${repopath}</url>
    </repository>
    <snapshotRepository>
      <id>repoid</id>
      <url>file://${repopath}</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>io.takari.maven.plugins</groupId>
        <artifactId>takari-lifecycle-plugin</artifactId>
        <version>${lifecycle-plugin.version}</version>
        <extensions>true</extensions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.1</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
